//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "todo_items")]
pub struct Model {
  #[sea_orm(primary_key)]
  pub id: i32,
  pub category_id: Option<i32>,
  pub title: Option<String>,
  pub content: Option<String>,
  pub link: Option<String>,
  pub color: Option<String>,
  pub priority: Option<String>,
  pub due_date: DateTime,
  pub status: Option<String>,
  pub user_id: i32,
  pub created_at: DateTime,
  pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(
    belongs_to = "super::todo_categories::Entity",
    from = "Column::CategoryId",
    to = "super::todo_categories::Column::Id",
    on_update = "Cascade",
    on_delete = "Cascade"
  )]
  TodoCategories,
}

impl Related<super::todo_categories::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::TodoCategories.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
